package edu.mit.virtualnodecloud;

import android.app.Activity;
import android.os.Bundle;

import java.util.ArrayList;
import java.util.List;

import android.app.AlertDialog;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.pm.PackageManager.NameNotFoundException;
import android.net.Uri;
import android.net.wifi.ScanResult;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.preference.PreferenceManager;
import android.util.Log;
import android.widget.Toast;

public class VirtualNodeCloudApp extends android.app.Application {
	final static String TAG = "VirtualNodeCloudApp";
	
	private WifiManager wifiManager;
	private boolean shouldDisableWifi;
	
	// Deal with received intents
	private BroadcastReceiver scanReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            if (WifiManager.SCAN_RESULTS_AVAILABLE_ACTION.equals(intent.getAction())) {
                if (shouldDisableWifi) {
                    wifiManager.setWifiEnabled(false);
                } // else stop disabling it
                shouldDisableWifi = false;
            }
        }
    };
	
	
    @Override
    public void onCreate() {
		super.onCreate();
		Log.d(TAG, "onCreate");
		
		registerReceiver(scanReceiver, new IntentFilter(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION));
        wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);
        if (!wifiManager.isWifiEnabled()) {
            wifiManager.setWifiEnabled(true);
            shouldDisableWifi = true;
        }
        wifiManager.startScan();
    }
	
    @Override
    public void onTerminate() {
        if (service != null) {
            Log.e(TAG, "The app is terminated while the service is running!");
            service.stopRequest();
        }
        // clean up after yourself
        if (shouldDisableWifi) {
            wifiManager.setWifiEnabled(false);
        }
        try {
            unregisterReceiver(scanReceiver);
        } catch (Exception e) {
            // ignore IntentReceiverLeaked
        }
        super.onTerminate();
    }
}