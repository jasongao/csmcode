package edu.mit.VirtualNode;

import android.R;
import android.app.Activity;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnKeyListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;

public class VirtualNode extends Activity {

	final static private String TAG = "VirtualNode";
	final static private boolean D = true;
	final static int PACKET_CAME = 1;
	final static int TOAST = 2;

	EditText msg;
	Button send;
	ListView msgList;
	ArrayAdapter<String> receivedMessages;
	ServerThread myThread;

	// Handles messages from ServerThread / from network
	private final Handler mHandler = new Handler() {
		@Override
		public void handleMessage(Message msg) {

			if (D)
				Log.d(TAG, "In the Handler");
			switch (msg.what) {
			case PACKET_CAME:
				String incomingMessage = (String) msg.obj;
				receivedMessages.add("You: " + incomingMessage);
				break;
			case TOAST:
				String toastToMake = (String) msg.obj;
				Toast.makeText(getApplicationContext(), toastToMake,
						Toast.LENGTH_SHORT).show();
				break;
			}
		}
	};

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		send = (Button) findViewById(R.id.send);
		send.setOnClickListener(send_listener);

		msgList = (ListView) findViewById(R.id.msgList);
		// msgList.setTextFilterEnabled(true);

		receivedMessages = new ArrayAdapter<String>(this, R.layout.message);
		msgList.setAdapter(receivedMessages);

		msg = (EditText) findViewById(R.id.msg);
		msg.setOnKeyListener(new OnKeyListener() {
			public boolean onKey(View v, int keyCode, KeyEvent event) {
				// If the event is a key-up event on the "enter" button
				if ((event.getAction() == KeyEvent.ACTION_UP)
						&& (keyCode == KeyEvent.KEYCODE_ENTER)) {
					postMessage();
					return true;
				}
				return false;
			}
		});

		// Start my server thread
		myThread = new ServerThread(getApplicationContext(), mHandler);

		// Check if it's running
		if (!myThread.socketIsOK()) {
			Log.e(TAG, "Server NOT STARTED");
			Toast.makeText(getApplicationContext(), "Cannot Start Server: ",
					Toast.LENGTH_LONG).show();
			return;
		}

		// All appears to be OK, start the main loop
		myThread.start();
		Log.i(TAG, "Server Started");

	}// end OnCreate()

	// Sends the message in the msg EditText
	private void postMessage() {
		String theNewMessage = msg.getText().toString();

		try {
			myThread.sendMessage(theNewMessage);
		} catch (Exception e) {
			Log.e(TAG, "Cannot send message" + e.getMessage());
		}
		receivedMessages.add("Me: " + theNewMessage);
		msg.setText("");
	}

	// On click listener for the button
	private OnClickListener send_listener = new OnClickListener() {
		public void onClick(View v) {
			postMessage();
		}
	};

	@Override
	public void onDestroy() {
		super.onDestroy();
		myThread.closeSocket();
	}

}// Activity class